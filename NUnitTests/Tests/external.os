Перем юТест;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьСумму");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуПеречисления");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоОбъектКоллекция");

	Возврат ВсеТесты;
	
КонецФункции

Процедура ТестДолжен_ПроверитьСумму() Экспорт

	Слагаемое1 = Новый Слагаемое(5);
	Слагаемое2 = Новый Слагаемое(Слагаемое1);

	Складыватель = Новый Сложение;
	Складыватель.ДобавитьСлагаемое(Слагаемое1);
	Складыватель.ДобавитьСлагаемое(Слагаемое2);

	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 10, "Неправильно работает сложение двух элементов!");

	Складыватель.ДобавитьСлагаемое(-3);
	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 7, "Неправильно работает сложение трёх элементов!");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоОбъектКоллекция() Экспорт

	Слагаемое1 = Новый Слагаемое(5);
	Слагаемое2 = Новый Слагаемое(Слагаемое1);

	Складыватель = Новый Сложение;
	Складыватель.ДобавитьСлагаемое(Слагаемое1);
	Складыватель.ДобавитьСлагаемое(Слагаемое2);

	Для Каждого мСлагаемое Из Складыватель Цикл

		// В случае, если Addition не воплощает ICollectionContext,
		// этот цикл упадёт с ошибкой времени выполнения
		// и тест не будет пройден

	КонецЦикла;	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуПеречисления() Экспорт

	Слагаемое1 = Новый Слагаемое(5);
	Слагаемое2 = Новый Слагаемое(Слагаемое1);

	Складыватель = Новый Сложение;
	Складыватель.ДобавитьСлагаемое(Слагаемое1);
	Складыватель.ДобавитьСлагаемое(Слагаемое2);

	СтарыйВидОперации = Складыватель.ВидОперации; // Тут упадёт :)
	Складыватель.ВидОперации = ВидыОперации.Умножение;

	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 25, "Неправильно работает перечисление!");

КонецПроцедуры
